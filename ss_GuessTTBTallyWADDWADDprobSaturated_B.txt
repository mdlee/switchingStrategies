# switching strategies: Guess, TTB, Tally, WADD, WADDprob, Saturated

data{
  for (m in 1:nStrategies){
	  baseStrategies[m] = 1
  }
}

model{
  for (i in 1:nSubjects){
	  for (t in 1:nTrials){
	    # Observed decision
	    decision[i, t] ~ dbern(theta[i, z[i, stage[i, t]], type[i, t]])
	    # Stage for this subject at this trial
		  stage[i, t] = sum(beyond[i, t, 1:max(1, nSwitches[i])]) + 1
		  for (k in 1:max(1, nSwitches[i])){
		    # is trial to the right of boundary?
		    beyond[i, t, k] = step(t - tau[i, k] - 1)
	    }
	  }
	  # Guess
    theta[i, 1, 1] = 0.5
    theta[i, 1, 2] = 0.5
    theta[i, 1, 3] = 0.5
    # TTB
    theta[i, 2, 1] = 1 - epsilon[i, 1]
    theta[i, 2, 2] = 1 - epsilon[i, 1]
    theta[i, 2, 3] = 1 - epsilon[i, 1]
    # TALLY
    theta[i, 3, 1] = 1 - epsilon[i, 2]
    theta[i, 3, 2] = epsilon[i, 2]
    theta[i, 3, 3] = 0.5
    # WADD
    theta[i, 4, 1] = 1 - epsilon[i, 3]
    theta[i, 4, 2] = epsilon[i, 3]
    theta[i, 4, 3] = 1 - epsilon[i, 3]
    # WADDprob
    theta[i, 5, 1] = 1 - epsilon[i, 4]
    theta[i, 5, 2] = epsilon[i, 6]
    theta[i, 5, 3] = 1 - epsilon[i, 5]    
    # Saturated
    theta[i, 6, 1] = epsilon[i, 7]
    theta[i, 6, 2] = epsilon[i, 8]
    theta[i, 6, 3] = epsilon[i, 9]
    # Parameter priors
    # Error rate bounded for TTB, TALLY and WADD
    for (j in 1:3){
      epsilon[i, j] ~ dunif(0, 0.5)
    }
    # Order constrained and bounded for WADDprob
    for (j in 1:3){
      epsilonTmp[i, j] ~ dunif(0,0.5)
    }
    epsilon[i, 4:6] = sort(epsilonTmp[i, 1:3])
    # Unconstrained for Saturated
    for (j in 7:9){
      epsilon[i, j] ~ dunif(0, 1)
    }
	  z[i, 1] ~ dcat(baseStrategies)
    for (x in 2:(nSwitches[i]+1)){
      z[i, x] ~ dcat(pi[z[i, x-1], 1:nStrategies])
    }
  }
  # Strategy change baserate
  for (j1 in 1:nStrategies){
    for (j2 in 1:nStrategies){
      basePi[j1, j2] = equals(j1, j2)*(-1) + 1  # 0 if j1 == j2, 1 otherwise
    }
    pi[j1, 1:nStrategies] ~ ddirch(basePi[j1, 1:nStrategies])
  }
}