# switching strategies, latent mixture: TTB, Tally, WADD, Guess
model{
 for (i in 1:nSubjects){
	for (t in 1:nTrials){

	   # Observed decision
	   y[i, t] ~ dbern(equals(theta[i, t, z[i, omega[i, t]]], 1) * (1 - epsilon[i])
	                 + equals(theta[i, t, z[i, omega[i, t]]], 0) * epsilon[i]
	                 + equals(theta[i, t, z[i, omega[i, t]]], 0.5) * 0.5)

	   # Stage for this subject at this trial
	   omega[i, t] = sum(omegaTmp[i, t, ]) + 1
	   for (k in 1:nMaxSwitches){
		 # is trial to the right of boundary?
		 omegaTmp[i, t, k] = step(t - tau[i, k] - 1)
	   }

	   # Behavior for each strategy on each trial (for the subject, if parameterized)
	   theta[i, t, 1] = TTB(cues[stimA[i, t], ], cues[stimB[i, t], ], searchOrder)
	   outputTALLY[i, t, 1:2] = TALLY(cues[stimA[i, t], ], cues[stimB[i, t], ], searchOrder)
	   theta[i, t, 2] = outputTALLY[i, t, 1]
	   outputWADD[i, t, 1:2] = WADD(cues[stimA[i, t], ], cues[stimB[i, t], ], cueEvidence, searchOrder)
	   theta[i, t, 3] = outputWADD[i, t, 1]
	   theta[i, t, 4] = 0.5
	 }

	 # Error of execution
	 epsilon[i] ~ dunif(0, 0.5)

	 # Strategy switch point
	 tau[i, 1:nMaxSwitches] = sort(tauTmp[i, ])
	 for (x in 1:nMaxSwitches){
	   tauTmp[i, x] ~ dunif(1, gamma[i]/(1-gamma[i])*nTrials)
	 }

	 # Strategy propensity
	 gamma[i] ~ dnorm(muGamma[x[i]+1], 1/sigmaGamma[x[i]+1]^2)T(0.5, 1)

	 # Strategy use
	 z[i, 1] ~ dcat(piPrime)
     for (k in 1:nMaxSwitches){
       z[i, k+1] ~ dcat(pi[z[i, k], ])
     }
  }

  # Gamma groups
  for (g in 1:2){
  	muGammaTmp[g] ~ dunif(0.5, 1)
  	sigmaGamma[g] ~ dunif(0, 0.5)
  }
  muGamma = sort(muGammaTmp)

  # Strategy baserate
  baseStrategies = rep(1, nStrategies)
  piPrime ~ ddirch(baseStrategies)
  for (j1 in 1:nStrategies){
    for (j2 in 1:nStrategies){
      basePi[j1, j2] = 1 - equals(j1, j2)  # 0 if j1 == j2, 1 otherwise
    }
    pi[j1, 1:nStrategies] ~ ddirch(basePi[j1, ])
  }
}